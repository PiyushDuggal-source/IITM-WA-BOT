{
  "version": 3,
  "sources": ["../../../src/utils/logger/index.ts"],
  "sourcesContent": ["//\n// type Log = {\n//   msg: string;\n//   type: Types;\n//   error: boolean;\n// };\n//\n// export const log = ({ msg, type, error }: Log) => {\n//   let today = new Date();\n//   let formattedDateTime =\n//     \"[\" +\n//     today.getFullYear() +\n//     \"-\" +\n//     (today.getMonth() + 1) +\n//     \"-\" +\n//     today.getDate() +\n//     \" \" +\n//     today.getHours() +\n//     \":\" +\n//     today.getMinutes() +\n//     \":\" +\n//     today.getSeconds() +\n//     \"] \";\n//\n//   if (!error) {\n//     console.log(formattedDateTime + ` [${type}] ` + msg + \"\\n\");\n//     // log_file.write(formattedDateTime+'INFO: '+msg+'\\n');\n//   } else {\n//     console.error(formattedDateTime + ` [${type}] ` + msg + \"\\n\");\n//     // log_file.write(formattedDateTime+'ERROR: '+msg+'\\n');\n//   }\n// };\n\nimport { execSync } from \"child_process\";\nimport { createLogger, format, config, transports } from \"winston\";\n\n\nconst _paperTrailHost = process.env.PAPERTRAIL_HOST;\nconst _paperTrailPort = process.env.PAPERTRAIL_PORT;\n\nconst myFormat = format.printf(\n  ({ level, message, label, timestamp }) =>\n    `time-${timestamp} [${label}] ${level}: ${message}`\n);\n\nconst logFileName = `./logs/wa-${Date.now()}.log`;\nconst binaryFolderPath = \"./bin\";\nlet binaryFileName = ``;\n\nconst fileTransport = new transports.File({ filename: logFileName });\nconst consoleTransport = new transports.Console();\n\nswitch (process.platform) {\n  case \"darwin\":\n    binaryFileName = \"remote_syslog_darwin\";\n    break;\n\n  case \"linux\":\n    binaryFileName = \"remote_syslog_linux\";\n    break;\n\n  default:\n    binaryFileName = \"remote_syslog_linux\";\n}\n\nconst logger = createLogger({\n  format: format.combine(\n    format.timestamp({\n      format: \"YYYY-MM-DD HH:mm:ss\",\n    }),\n    myFormat\n  ),\n  levels: config.syslog.levels,\n  transports: [fileTransport, consoleTransport],\n});\n\nconst info = (string:string, label:any) => {\n  logger.info(string, {\n    label,\n  });\n};\n\n// cmd: remote_syslog -d host -p port logfile.log\ntry {\n  const killEarlierSysCmd = `pkill [r]emote_syslog`;\n  const sysLogConnectCmd = `${binaryFolderPath}/${binaryFileName} -d ${_paperTrailHost} -p ${_paperTrailPort} ${logFileName}`;\n\n  try {\n    execSync(killEarlierSysCmd);\n  } catch (err) {\n    console.log(\"No earlier remote syslog process found\", err);\n  }\n  execSync(sysLogConnectCmd);\n} catch (err) {\n  logger.error(\n    \"Someting went wrong while executing remote syslog command\",\n    err\n  );\n}\n\nlogger.info(\n  `Whats app bot rerun & logging initiated; logging at ${logFileName}`,\n  {\n    label: \"Bot Initialize\",\n  }\n);\n\nexport default logger;\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAiCA,IAAAI,EAAyB,yBACzBC,EAAyD,mBAGzD,MAAMC,EAAkB,QAAQ,IAAI,gBAC9BC,EAAkB,QAAQ,IAAI,gBAE9BC,EAAW,SAAO,OACtB,CAAC,CAAE,MAAAC,EAAO,QAAAC,EAAS,MAAAC,EAAO,UAAAC,CAAU,IAClC,QAAQA,MAAcD,MAAUF,MAAUC,GAC9C,EAEMG,EAAc,aAAa,KAAK,IAAI,QACpCC,EAAmB,QACzB,IAAIC,EAAiB,GAErB,MAAMC,EAAgB,IAAI,aAAW,KAAK,CAAE,SAAUH,CAAY,CAAC,EAC7DI,EAAmB,IAAI,aAAW,QAExC,OAAQ,QAAQ,SAAU,CACxB,IAAK,SACHF,EAAiB,uBACjB,MAEF,IAAK,QACHA,EAAiB,sBACjB,MAEF,QACEA,EAAiB,qBACrB,CAEA,MAAMG,KAAS,gBAAa,CAC1B,OAAQ,SAAO,QACb,SAAO,UAAU,CACf,OAAQ,qBACV,CAAC,EACDV,CACF,EACA,OAAQ,SAAO,OAAO,OACtB,WAAY,CAACQ,EAAeC,CAAgB,CAC9C,CAAC,EAEKE,EAAO,CAACC,EAAeT,IAAc,CACzCO,EAAO,KAAKE,EAAQ,CAClB,MAAAT,CACF,CAAC,CACH,EAGA,GAAI,CACF,MAAMU,EAAoB,wBACpBC,EAAmB,GAAGR,KAAoBC,QAAqBT,QAAsBC,KAAmBM,IAE9G,GAAI,IACF,YAASQ,CAAiB,CAC5B,OAASE,EAAP,CACA,QAAQ,IAAI,yCAA0CA,CAAG,CAC3D,IACA,YAASD,CAAgB,CAC3B,OAASC,EAAP,CACAL,EAAO,MACL,4DACAK,CACF,CACF,CAEAL,EAAO,KACL,uDAAuDL,IACvD,CACE,MAAO,gBACT,CACF,EAEA,IAAOX,EAAQgB",
  "names": ["logger_exports", "__export", "logger_default", "__toCommonJS", "import_child_process", "import_winston", "_paperTrailHost", "_paperTrailPort", "myFormat", "level", "message", "label", "timestamp", "logFileName", "binaryFolderPath", "binaryFileName", "fileTransport", "consoleTransport", "logger", "info", "string", "killEarlierSysCmd", "sysLogConnectCmd", "err"]
}

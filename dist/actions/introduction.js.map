{
  "version": 3,
  "sources": ["../../src/actions/introduction.ts"],
  "sourcesContent": ["import * as WAWebJS from \"whatsapp-web.js\";\r\nimport { User_AllCommands } from \"../utils/Commands/allCmds\";\r\nimport { GREETINGS, HEY_EMOJIES } from \"../utils/reply/replies\";\r\nimport { random } from \"./sendMessage\";\r\nimport * as dotenv from \"dotenv\";\r\nimport { MessageType } from \"../types/types\";\r\nimport { BOT, WA_BOT_ID } from \"..\";\r\nimport { sendAndDeleteMsg } from \"./sendAndDeleteMsg\";\r\ndotenv.config();\r\nconst CMD_NAMES = [\r\n  \"\\n*These are the Calendar Commands! : You can see the IIT-M Google Calendar Events from RIGHT HERE \u270C Just by using these commands!*\\n\",\r\n  \"\\n*These are the Class Commands: You can see if there is any class today or not!*\\n\",\r\n  '\\n*And these are the commands which will show you the other commands, LOL \"Commands representing Commands\" its like commenting the commented code:*\\n',\r\n  `\\n*These are the commands for getting Notes from RIGHT HERE* _If you have notes and want to share, please Share, I will add them in *${process.env.BOT_NAME}*, then it will be accessible for ALL of us!_\\n\\nyou can also use it individually for all notes or you can use the filter\\n*E.G: !notes Stats*\\n`,\r\n  \"\\n*This is the command for getting the _COURSE PLAYLIST_ link from RIGHT HERE!*\\n\",\r\n  \"\\n*Want some Help?? try these commands!!*\\n\",\r\n  \"\\n*These are the commands for checking the ELIZA is Online or Offline*\\nPlease ping *Admin* if *ELIZA* does not respond\\n\",\r\n  \"\\n*Want to check my _Source Code_?* Use this command:\\n\",\r\n];\r\n\r\nconst userContent = `Hey ${HEY_EMOJIES[random(HEY_EMOJIES.length)]} ${GREETINGS.member[random(GREETINGS.memberMsgNumber)]\r\n  }!\\nI am WhatsApp Bot!!\\n\\nMy ${GREETINGS.admin[random(GREETINGS.adminMsgNumber)]\r\n  } calls me *${process.env.BOT_NAME as String\r\n  }* (named after the first ever chatbot ${HEY_EMOJIES[random(HEY_EMOJIES.length)]\r\n  })\\n\\nMy Purpose is to help you in your journey to become an *IITian* \u270C fast, so for that I can keep you notified for all the major Things: Classes, Calendars, Notes and ALL\\n\\nType this commands to see all the commands!\\n*!AllCmds*`;\r\nconst adminContent = `Hey ${HEY_EMOJIES[random(HEY_EMOJIES.length)]} ${GREETINGS.admin[random(GREETINGS.adminMsgNumber)]\r\n  }!\\nI am Your WhatsApp Bot!!\\nWhat can I do for you?\\nMy Purpose is to help you in your journey to become an *IITian* \u270C fast, so for that I can keep you notified for all the major Things: Classes, Calendars, Notes and ALL\\n\\nType this commands to see all the commands!\\n*!AllCmds*`;\r\n\r\nconst getCommands = (allCommands: string[][]): string => {\r\n  let msg = \"\";\r\n  allCommands.forEach((cmds, index) => {\r\n    msg += CMD_NAMES[index];\r\n    cmds.forEach(\r\n      (cmd, index) =>\r\n      (msg += `${index + 1}. ${process.env.BOT_PREFIX as string}${cmd}${index !== cmds.length ? \"\\n\" : \"\"\r\n        }`)\r\n    );\r\n  });\r\n  return msg;\r\n};\r\n\r\n// const commands = (cmds: string[]): string => {\r\n//   let msg = \"\";\r\n//   cmds.forEach((cmd, index) => {\r\n//     msg += `${index + 1}. ${process.env.BOT_PREFIX as string}${cmd}${\r\n//       index + 1 !== cmds.length ? \"\\n\" : \"\"\r\n//     }`;\r\n//   });\r\n//   return msg;\r\n// };\r\n\r\nexport const introduction = async (\r\n  client: WAWebJS.Client,\r\n  user: MessageType,\r\n  messageInstance: WAWebJS.Message\r\n) => {\r\n  if (typeof user === \"string\") {\r\n    sendAndDeleteMsg(client, messageInstance, user, userContent);\r\n  } else {\r\n    client.sendMessage(WA_BOT_ID, adminContent);\r\n  }\r\n};\r\n\r\nexport const sendCommands = async (\r\n  client: WAWebJS.Client,\r\n  messageInstance: WAWebJS.Message,\r\n  who: MessageType\r\n) => {\r\n  const allCmds = `----------These are the Bot Commands!!----------\\n${getCommands(\r\n    User_AllCommands\r\n  )}`;\r\n  if (who === \"ADMIN\") {\r\n    const chats = await client.getChats();\r\n    const bot = chats[BOT];\r\n    bot.sendMessage(allCmds);\r\n  } else if (who !== \"NONE\") {\r\n    await sendAndDeleteMsg(client, messageInstance, who, allCmds);\r\n  }\r\n};\r\n"],
  "mappings": "0jBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,kBAAAE,EAAA,iBAAAC,IAAA,eAAAC,EAAAJ,GACA,IAAAK,EAAiC,qCACjCC,EAAuC,kCACvCC,EAAuB,yBACvBC,EAAwB,qBAExBC,EAA+B,cAC/BC,EAAiC,8BACjCF,EAAO,OAAO,EACd,MAAMG,EAAY,CAChB;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA,qIAAwI,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA,EACpJ;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA;AAAA,EACA;AAAA;AAAA,CACF,EAEMC,EAAc,OAAO,iBAAY,UAAO,cAAY,MAAM,CAAC,KAAK,YAAU,UAAO,UAAO,YAAU,eAAe,CAAC;AAAA;AAAA;AAAA,KACtF,YAAU,SAAM,UAAO,YAAU,cAAc,CAAC,eAClE,QAAQ,IAAI,iDACe,iBAAY,UAAO,cAAY,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,YAE3EC,EAAe,OAAO,iBAAY,UAAO,cAAY,MAAM,CAAC,KAAK,YAAU,SAAM,UAAO,YAAU,cAAc,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAGjHC,EAAeC,GAAoC,CACvD,IAAIC,EAAM,GACV,OAAAD,EAAY,QAAQ,CAACE,EAAMC,IAAU,CACnCF,GAAOL,EAAUO,CAAK,EACtBD,EAAK,QACH,CAACE,EAAKD,IACLF,GAAO,GAAGE,EAAQ,MAAM,QAAQ,IAAI,aAAuBC,IAAMD,IAAUD,EAAK,OAAS;AAAA,EAAO,IAEnG,CACF,CAAC,EACMD,CACT,EAYad,EAAe,MAC1BkB,EACAC,EACAC,IACG,CACC,OAAOD,GAAS,YAClB,oBAAiBD,EAAQE,EAAiBD,EAAMT,CAAW,EAE3DQ,EAAO,YAAY,YAAWP,CAAY,CAE9C,EAEaV,EAAe,MAC1BiB,EACAE,EACAC,IACG,CACH,MAAMC,EAAU;AAAA,EAAqDV,EACnE,kBACF,IACIS,IAAQ,SACI,MAAMH,EAAO,SAAS,GAClB,KAAG,EACjB,YAAYI,CAAO,EACdD,IAAQ,QACjB,QAAM,oBAAiBH,EAAQE,EAAiBC,EAAKC,CAAO,CAEhE",
  "names": ["introduction_exports", "__export", "introduction", "sendCommands", "__toCommonJS", "import_allCmds", "import_replies", "import_sendMessage", "dotenv", "import__", "import_sendAndDeleteMsg", "CMD_NAMES", "userContent", "adminContent", "getCommands", "allCommands", "msg", "cmds", "index", "cmd", "client", "user", "messageInstance", "who", "allCmds"]
}

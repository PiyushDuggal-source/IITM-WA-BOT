{
  "version": 3,
  "sources": ["../../src/actions/sendMessage.ts"],
  "sourcesContent": ["import * as WAWebJS from \"whatsapp-web.js\";\r\nimport { MessageContent } from \"whatsapp-web.js\";\r\nimport { FOOTERS } from \"../utils/reply/footers\";\r\nimport * as dotenv from \"dotenv\";\r\nimport { sendAndDeleteMsg } from \"./sendAndDeleteMsg\";\r\nimport { MessageType } from \"../types/types\";\r\nimport { BOT } from \"..\";\r\ndotenv.config();\r\n\r\nexport const sendMessage = async (\r\n  client: WAWebJS.Client,\r\n  messageToSend: MessageContent,\r\n  messageInstance: WAWebJS.Message,\r\n  who: MessageType,\r\n  cmds?: boolean,\r\n  classMsg?: {\r\n    classMsg: boolean;\r\n  },\r\n  help?: boolean\r\n) => {\r\n  if (who === \"ADMIN\") {\r\n    const chats = await client.getChats();\r\n    const WA_BOT = chats[BOT];\r\n    if (cmds) {\r\n      WA_BOT.sendMessage(messageToSend);\r\n    } else if (help) {\r\n      const msg = `${process.env.BOT_NAME as String}: ${messageToSend} \\n:${\r\n        FOOTERS.footers[random(FOOTERS.footerMsgLength)]\r\n      }`;\r\n      WA_BOT.sendMessage(msg);\r\n    } else {\r\n      const msg = `${process.env.BOT_NAME as String}: ${messageToSend}`;\r\n      WA_BOT.sendMessage(msg);\r\n    }\r\n  } else if (who !== \"NONE\") {\r\n    const userId = messageInstance.author;\r\n    if (classMsg?.classMsg) {\r\n      const chats = await client.getChats();\r\n      const WA_BOT = chats[BOT];\r\n      WA_BOT.sendMessage(messageToSend);\r\n    } else if (cmds) {\r\n      sendAndDeleteMsg(\r\n        client,\r\n        messageInstance,\r\n        userId as string,\r\n        messageToSend\r\n      );\r\n    } else if (help) {\r\n      const msg = `${process.env.BOT_NAME as String}: ${messageToSend} \\n:${\r\n        FOOTERS.footers[random(FOOTERS.footerMsgLength)]\r\n      }`;\r\n      sendAndDeleteMsg(client, messageInstance, userId as string, msg);\r\n    } else {\r\n      const msg = `${process.env.BOT_NAME as String}: ${messageToSend}`;\r\n      sendAndDeleteMsg(client, messageInstance, userId as string, msg);\r\n    }\r\n  }\r\n};\r\n\r\nexport const random = (max: number): number => Math.floor(Math.random() * max);\r\n"],
  "mappings": "mlBAAA,4CAEA,MAAwB,qCACxB,EAAwB,qBACxB,EAAiC,iCAEjC,EAAoB,iBACpB,EAAO,SAEA,KAAM,GAAc,MACzB,EACA,EACA,EACA,EACA,EACA,EAGA,IACG,CACH,GAAI,IAAQ,QAAS,CAEnB,KAAM,GAAS,AADD,MAAM,GAAO,YACN,OACrB,GAAI,EACF,EAAO,YAAY,WACV,EAAM,CACf,KAAM,GAAM,GAAG,QAAQ,IAAI,aAAuB;AAAA,GAChD,UAAQ,QAAQ,EAAO,UAAQ,oBAEjC,EAAO,YAAY,OACd,CACL,KAAM,GAAM,GAAG,QAAQ,IAAI,aAAuB,IAClD,EAAO,YAAY,YAEZ,IAAQ,OAAQ,CACzB,KAAM,GAAS,EAAgB,OAC/B,GAAI,iBAAU,SAGZ,AADe,AADD,MAAM,GAAO,YACN,OACd,YAAY,WACV,EACT,uBACE,EACA,EACA,EACA,WAEO,EAAM,CACf,KAAM,GAAM,GAAG,QAAQ,IAAI,aAAuB;AAAA,GAChD,UAAQ,QAAQ,EAAO,UAAQ,oBAEjC,uBAAiB,EAAQ,EAAiB,EAAkB,OACvD,CACL,KAAM,GAAM,GAAG,QAAQ,IAAI,aAAuB,IAClD,uBAAiB,EAAQ,EAAiB,EAAkB,MAKrD,EAAS,AAAC,GAAwB,KAAK,MAAM,KAAK,SAAW",
  "names": []
}

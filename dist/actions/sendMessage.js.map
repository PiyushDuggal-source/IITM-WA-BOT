{
  "version": 3,
  "sources": ["../../src/actions/sendMessage.ts"],
  "sourcesContent": ["import * as WAWebJS from \"whatsapp-web.js\";\r\nimport { MessageContent } from \"whatsapp-web.js\";\r\nimport { FOOTERS } from \"../utils/reply/footers\";\r\nimport * as dotenv from \"dotenv\";\r\nimport { sendAndDeleteMsg } from \"./sendAndDeleteMsg\";\r\nimport { MessageType } from \"../types/types\";\r\nimport { BOT } from \"..\";\r\ndotenv.config();\r\n\r\nexport const sendMessage = async (\r\n  client: WAWebJS.Client,\r\n  messageToSend: MessageContent,\r\n  messageInstance: WAWebJS.Message,\r\n  who: MessageType,\r\n  cmds?: boolean,\r\n  classMsg?: {\r\n    classMsg: boolean;\r\n  },\r\n  help?: boolean\r\n) => {\r\n  if (who === \"ADMIN\") {\r\n    const chats = await client.getChats();\r\n    const WA_BOT = chats[BOT];\r\n    if (cmds) {\r\n      WA_BOT.sendMessage(messageToSend);\r\n    } else if (help) {\r\n      const msg = `${process.env.BOT_NAME as String}: ${messageToSend} \\n:${\r\n        FOOTERS.footers[random(FOOTERS.footerMsgLength)]\r\n      }`;\r\n      WA_BOT.sendMessage(msg);\r\n    } else {\r\n      const msg = `${process.env.BOT_NAME as String}: ${messageToSend}`;\r\n      WA_BOT.sendMessage(msg);\r\n    }\r\n  } else if (who !== \"NONE\") {\r\n    const userId = messageInstance.author;\r\n    if (classMsg?.classMsg) {\r\n      const chats = await client.getChats();\r\n      const WA_BOT = chats[BOT];\r\n      WA_BOT.sendMessage(messageToSend);\r\n    } else if (cmds) {\r\n      sendAndDeleteMsg(\r\n        client,\r\n        messageInstance,\r\n        userId as string,\r\n        messageToSend\r\n      );\r\n    } else if (help) {\r\n      const msg = `${process.env.BOT_NAME as String}: ${messageToSend} \\n:${\r\n        FOOTERS.footers[random(FOOTERS.footerMsgLength)]\r\n      }`;\r\n      sendAndDeleteMsg(client, messageInstance, userId as string, msg);\r\n    } else {\r\n      const msg = `${process.env.BOT_NAME as String}: ${messageToSend}`;\r\n      sendAndDeleteMsg(client, messageInstance, userId as string, msg);\r\n    }\r\n  }\r\n};\r\n\r\nexport const random = (max: number): number => Math.floor(Math.random() * max);\r\n"],
  "mappings": "0jBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,YAAAE,EAAA,gBAAAC,IAAA,eAAAC,EAAAJ,GAEA,IAAAK,EAAwB,kCACxBC,EAAwB,qBACxBC,EAAiC,8BAEjCC,EAAoB,cACpBF,EAAO,OAAO,EAEP,MAAMH,EAAc,MACzBM,EACAC,EACAC,EACAC,EACAC,EACAC,EAGAC,IACG,CACH,GAAIH,IAAQ,QAAS,CAEnB,MAAMI,GADQ,MAAMP,EAAO,SAAS,GACf,KAAG,EACxB,GAAII,EACFG,EAAO,YAAYN,CAAa,UACvBK,EAAM,CACf,MAAME,EAAM,GAAG,QAAQ,IAAI,aAAuBP;AAAA,GAChD,UAAQ,QAAQR,EAAO,UAAQ,eAAe,CAAC,IAEjDc,EAAO,YAAYC,CAAG,CACxB,KAAO,CACL,MAAMA,EAAM,GAAG,QAAQ,IAAI,aAAuBP,IAClDM,EAAO,YAAYC,CAAG,CACxB,CACF,SAAWL,IAAQ,OAAQ,CACzB,MAAMM,EAASP,EAAgB,OAC/B,GAAIG,GAAA,MAAAA,EAAU,UACE,MAAML,EAAO,SAAS,GACf,KAAG,EACjB,YAAYC,CAAa,UACvBG,KACT,oBACEJ,EACAE,EACAO,EACAR,CACF,UACSK,EAAM,CACf,MAAME,EAAM,GAAG,QAAQ,IAAI,aAAuBP;AAAA,GAChD,UAAQ,QAAQR,EAAO,UAAQ,eAAe,CAAC,OAEjD,oBAAiBO,EAAQE,EAAiBO,EAAkBD,CAAG,CACjE,KAAO,CACL,MAAMA,EAAM,GAAG,QAAQ,IAAI,aAAuBP,OAClD,oBAAiBD,EAAQE,EAAiBO,EAAkBD,CAAG,CACjE,CACF,CACF,EAEaf,EAAUiB,GAAwB,KAAK,MAAM,KAAK,OAAO,EAAIA,CAAG",
  "names": ["sendMessage_exports", "__export", "random", "sendMessage", "__toCommonJS", "import_footers", "dotenv", "import_sendAndDeleteMsg", "import__", "client", "messageToSend", "messageInstance", "who", "cmds", "classMsg", "help", "WA_BOT", "msg", "userId", "max"]
}

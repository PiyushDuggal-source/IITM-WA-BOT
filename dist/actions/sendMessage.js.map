{
  "version": 3,
  "sources": ["../../src/actions/sendMessage.ts"],
  "sourcesContent": ["import * as WAWebJS from \"whatsapp-web.js\";\nimport { MessageContent } from \"whatsapp-web.js\";\nimport { FOOTERS } from \"../utils/reply/footers\";\nimport * as dotenv from \"dotenv\";\nimport { sendAndDeleteMsg } from \"./sendAndDeleteMsg\";\nimport { MessageType } from \"../types/types\";\nimport { BOT } from \"..\";\nimport { REACT_EMOGIES } from \"../utils/reply/replies\";\nimport { react } from \"./messageActions\";\ndotenv.config();\n\nexport const sendMessage = async (\n  client: WAWebJS.Client,\n  messageToSend: MessageContent,\n  messageInstance: WAWebJS.Message,\n  who: MessageType,\n  cmds?: boolean,\n  classMsg?: {\n    classMsg: boolean;\n  },\n  help?: boolean\n) => {\n  if (who.role === \"OWNER\") {\n    const chats = await client.getChats();\n    const WA_BOT = chats[BOT];\n    if (cmds) {\n      WA_BOT.sendMessage(messageToSend);\n    react(messageInstance)\n    } else if (help) {\n      const msg = `${process.env.BOT_NAME as String}: ${messageToSend} \\n:${\n        FOOTERS.footers[random(FOOTERS.footerMsgLength)]\n      }`;\n      WA_BOT.sendMessage(msg);\n    react(messageInstance)\n    } else {\n      console.log(\"reaching here\");\n      const msg = `${process.env.BOT_NAME as String}: ${messageToSend}`;\n      WA_BOT.sendMessage(msg);\n    react(messageInstance)\n    }\n  } else if (who.role !== \"NONE\") {\n    console.log(\"reached\");\n    if (classMsg?.classMsg) {\n      const chats = await client.getChats();\n      const WA_BOT = chats[BOT];\n      WA_BOT.sendMessage(messageToSend);\n      react(messageInstance)\n\n    } else if (cmds) {\n      sendAndDeleteMsg(client, messageInstance, who.chatId, messageToSend);\n    } else if (help) {\n      const msg = `${process.env.BOT_NAME as String}: ${messageToSend} \\n:${\n        FOOTERS.footers[random(FOOTERS.footerMsgLength)]\n      }`;\n      sendAndDeleteMsg(client, messageInstance, who.chatId, msg);\n    } else {\n      console.log(\"endly reaching here\");\n      const msg = `${process.env.BOT_NAME as String}: ${messageToSend}`;\n      sendAndDeleteMsg(client, messageInstance, who.chatId, msg);\n    }\n  }\n};\n\nexport const random = (max: number): number => Math.floor(Math.random() * max);\n"],
  "mappings": "0jBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,YAAAE,EAAA,gBAAAC,IAAA,eAAAC,EAAAJ,GAEA,IAAAK,EAAwB,kCACxBC,EAAwB,qBACxBC,EAAiC,8BAEjCC,EAAoB,cAEpBC,EAAsB,4BACtBH,EAAO,OAAO,EAEP,MAAMH,EAAc,MACzBO,EACAC,EACAC,EACAC,EACAC,EACAC,EAGAC,IACG,CACH,GAAIH,EAAI,OAAS,QAAS,CAExB,MAAMI,GADQ,MAAMP,EAAO,SAAS,GACf,KAAG,EACxB,GAAII,EACFG,EAAO,YAAYN,CAAa,KAClC,SAAMC,CAAe,UACVI,EAAM,CACf,MAAME,EAAM,GAAG,QAAQ,IAAI,aAAuBP;AAAA,GAChD,UAAQ,QAAQT,EAAO,UAAQ,eAAe,CAAC,IAEjDe,EAAO,YAAYC,CAAG,KACxB,SAAMN,CAAe,CACrB,KAAO,CACL,QAAQ,IAAI,eAAe,EAC3B,MAAMM,EAAM,GAAG,QAAQ,IAAI,aAAuBP,IAClDM,EAAO,YAAYC,CAAG,KACxB,SAAMN,CAAe,CACrB,CACF,SAAWC,EAAI,OAAS,OAEtB,GADA,QAAQ,IAAI,SAAS,EACjBE,GAAA,MAAAA,EAAU,UACE,MAAML,EAAO,SAAS,GACf,KAAG,EACjB,YAAYC,CAAa,KAChC,SAAMC,CAAe,UAEZE,KACT,oBAAiBJ,EAAQE,EAAiBC,EAAI,OAAQF,CAAa,UAC1DK,EAAM,CACf,MAAME,EAAM,GAAG,QAAQ,IAAI,aAAuBP;AAAA,GAChD,UAAQ,QAAQT,EAAO,UAAQ,eAAe,CAAC,OAEjD,oBAAiBQ,EAAQE,EAAiBC,EAAI,OAAQK,CAAG,CAC3D,KAAO,CACL,QAAQ,IAAI,qBAAqB,EACjC,MAAMA,EAAM,GAAG,QAAQ,IAAI,aAAuBP,OAClD,oBAAiBD,EAAQE,EAAiBC,EAAI,OAAQK,CAAG,CAC3D,CAEJ,EAEahB,EAAUiB,GAAwB,KAAK,MAAM,KAAK,OAAO,EAAIA,CAAG",
  "names": ["sendMessage_exports", "__export", "random", "sendMessage", "__toCommonJS", "import_footers", "dotenv", "import_sendAndDeleteMsg", "import__", "import_messageActions", "client", "messageToSend", "messageInstance", "who", "cmds", "classMsg", "help", "WA_BOT", "msg", "max"]
}

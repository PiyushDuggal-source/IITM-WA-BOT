{
  "version": 3,
  "sources": ["../../src/actions/sendClassMessage.ts"],
  "sourcesContent": ["import * as WAWebJS from \"whatsapp-web.js\";\nimport { BOT } from \"..\";\nimport { CALENDAR } from \"../resources/calendar\";\nimport { Calendar, MessageType } from \"../types/types\";\nimport { FOOTERS } from \"../utils/reply/footers\";\nimport { HOLIDAY_REPLIES } from \"../utils/reply/replies\";\nimport { random, sendMessage } from \"./sendMessage\";\n\nconst checkForClass = (calendar: Calendar) => {\n  const date = new Date();\n  return calendar.filter(\n    (event) => event.date.toDateString() === date.toDateString()\n  );\n};\n\nconst HOLYDAY_MSG = `${process.env.BOT_NAME as String} : ${\n  HOLIDAY_REPLIES.members[random(HOLIDAY_REPLIES.members.length)]\n} \\n: ${FOOTERS.footers[random(FOOTERS.footerMsgLength)]}`;\n\nexport const sendClassMessage = async (\n  client: WAWebJS.Client,\n  messageInstance: WAWebJS.Message,\n  who: MessageType\n) => {\n  const events = checkForClass(CALENDAR);\n  if (who.role === \"OWNER\") {\n    const chats = await client.getChats();\n    const WA_BOT = chats[BOT];\n    if (!events.length) {\n      WA_BOT.sendMessage(HOLYDAY_MSG);\n    } else {\n      let message = \"\uD83D\uDCD8*Today's Classes*\uD83D\uDCD8\";\n      events.forEach(\n        (event) =>\n          (message += `\\n -------------------------------- \\n\uD83D\uDCD6 *Topic* : *${event.topic}* \\n\uD83D\uDD70 *Timing* : _${event.time}_ \\n\uD83D\uDCC5 *Date* : *Today!* \\n\uD83C\uDFEB *Course* : ${event.courseName}\\n `)\n      );\n      WA_BOT.sendMessage(message);\n    }\n  } else if (who.role !== \"NONE\") {\n    console.log(\"reached send msg\")\n    if (!events.length) {\n      sendMessage(client, HOLYDAY_MSG, messageInstance, who, undefined, {\n        classMsg: true,\n      });\n    } else {\n      let message = \"\uD83D\uDCD8*Today's Classes*\uD83D\uDCD8\";\n      events.forEach(\n        (event) =>\n          (message += `\\n -------------------------------- \\n\uD83D\uDCD6 *Topic* : *${event.topic}* \\n\uD83D\uDD70 *Timing* : _${event.time}_ \\n\uD83D\uDCC5 *Date* : *Today!* \\n\uD83C\uDFEB *Course* : ${event.courseName}\\n `)\n      );\n      sendMessage(client, message, messageInstance, who, undefined, {\n        classMsg: true,\n      });\n    }\n  }\n};\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,sBAAAE,IAAA,eAAAC,EAAAH,GACA,IAAAI,EAAoB,cACpBC,EAAyB,iCAEzBC,EAAwB,kCACxBC,EAAgC,kCAChCC,EAAoC,yBAEpC,MAAMC,EAAiBC,GAAuB,CAC5C,MAAMC,EAAO,IAAI,KACjB,OAAOD,EAAS,OACbE,GAAUA,EAAM,KAAK,aAAa,IAAMD,EAAK,aAAa,CAC7D,CACF,EAEME,EAAc,GAAG,QAAQ,IAAI,cACjC,kBAAgB,WAAQ,UAAO,kBAAgB,QAAQ,MAAM,CAAC;AAAA,IACxD,UAAQ,WAAQ,UAAO,UAAQ,eAAe,CAAC,IAE1CX,EAAmB,MAC9BY,EACAC,EACAC,IACG,CACH,MAAMC,EAASR,EAAc,UAAQ,EACrC,GAAIO,EAAI,OAAS,QAAS,CAExB,MAAME,GADQ,MAAMJ,EAAO,SAAS,GACf,KAAG,EACxB,GAAI,CAACG,EAAO,OACVC,EAAO,YAAYL,CAAW,MACzB,CACL,IAAIM,EAAU,sCACdF,EAAO,QACJL,GACEO,GAAW;AAAA;AAAA,uBAAuDP,EAAM;AAAA,wBAA2BA,EAAM;AAAA;AAAA,uBAAgDA,EAAM;AAAA,EACpK,EACAM,EAAO,YAAYC,CAAO,CAC5B,CACF,SAAWH,EAAI,OAAS,OAEtB,GADA,QAAQ,IAAI,kBAAkB,EAC1B,CAACC,EAAO,UACV,eAAYH,EAAQD,EAAaE,EAAiBC,EAAK,OAAW,CAChE,SAAU,EACZ,CAAC,MACI,CACL,IAAIG,EAAU,sCACdF,EAAO,QACJL,GACEO,GAAW;AAAA;AAAA,uBAAuDP,EAAM;AAAA,wBAA2BA,EAAM;AAAA;AAAA,uBAAgDA,EAAM;AAAA,EACpK,KACA,eAAYE,EAAQK,EAASJ,EAAiBC,EAAK,OAAW,CAC5D,SAAU,EACZ,CAAC,CACH,CAEJ",
  "names": ["sendClassMessage_exports", "__export", "sendClassMessage", "__toCommonJS", "import__", "import_calendar", "import_footers", "import_replies", "import_sendMessage", "checkForClass", "calendar", "date", "event", "HOLYDAY_MSG", "client", "messageInstance", "who", "events", "WA_BOT", "message"]
}

{
  "version": 3,
  "sources": ["../../src/actions/sendClassMessage.ts"],
  "sourcesContent": ["import * as WAWebJS from \"whatsapp-web.js\";\r\nimport { BOT } from \"..\";\r\nimport { CALENDAR } from \"../resources/calendar\";\r\nimport { Calendar, MessageType } from \"../types/types\";\r\nimport { FOOTERS } from \"../utils/reply/footers\";\r\nimport { HOLIDAY_REPLIES } from \"../utils/reply/replies\";\r\nimport { random, sendMessage } from \"./sendMessage\";\r\n\r\nconst checkForClass = (calendar: Calendar) => {\r\n  const date = new Date();\r\n  return calendar.filter(\r\n    (event) => event.date.toDateString() === date.toDateString()\r\n  );\r\n};\r\n\r\nconst HOLYDAY_MSG = `${process.env.BOT_NAME as String} : ${\r\n  HOLIDAY_REPLIES.members[random(HOLIDAY_REPLIES.members.length)]\r\n} \\n: ${FOOTERS.footers[random(FOOTERS.footerMsgLength)]}`;\r\n\r\nexport const sendClassMessage = async (\r\n  client: WAWebJS.Client,\r\n  messageInstance: WAWebJS.Message,\r\n  who: MessageType\r\n) => {\r\n  const events = checkForClass(CALENDAR);\r\n  if (who === \"ADMIN\") {\r\n    const chats = await client.getChats();\r\n    const WA_BOT = chats[BOT];\r\n    if (!events.length) {\r\n      WA_BOT.sendMessage(HOLYDAY_MSG);\r\n    } else {\r\n      let message = \"\uD83D\uDCD8*Today's Classes*\uD83D\uDCD8\";\r\n      events.forEach(\r\n        (event) =>\r\n          (message += `\\n -------------------------------- \\n\uD83D\uDCD6 *Topic* : *${event.topic}* \\n\uD83D\uDD70 *Timing* : _${event.time}_ \\n\uD83D\uDCC5 *Date* : *Today!* \\n\uD83C\uDFEB *Course* : ${event.courseName}\\n `)\r\n      );\r\n      WA_BOT.sendMessage(message);\r\n    }\r\n  } else if (who !== \"NONE\") {\r\n    if (!events.length) {\r\n      sendMessage(client, HOLYDAY_MSG, messageInstance, who, undefined, {\r\n        classMsg: true,\r\n      });\r\n    } else {\r\n      let message = \"\uD83D\uDCD8*Today's Classes*\uD83D\uDCD8\";\r\n      events.forEach(\r\n        (event) =>\r\n          (message += `\\n -------------------------------- \\n\uD83D\uDCD6 *Topic* : *${event.topic}* \\n\uD83D\uDD70 *Timing* : _${event.time}_ \\n\uD83D\uDCC5 *Date* : *Today!* \\n\uD83C\uDFEB *Course* : ${event.courseName}\\n `)\r\n      );\r\n      sendMessage(client, message, messageInstance, who, undefined, {\r\n        classMsg: true,\r\n      });\r\n    }\r\n  }\r\n};\r\n"],
  "mappings": "mlBAAA,oCACA,MAAoB,iBACpB,EAAyB,oCAEzB,EAAwB,qCACxB,EAAgC,qCAChC,EAAoC,4BAEpC,KAAM,GAAgB,AAAC,GAAuB,CAC5C,KAAM,GAAO,GAAI,MACjB,MAAO,GAAS,OACd,AAAC,GAAU,EAAM,KAAK,iBAAmB,EAAK,iBAI5C,EAAc,GAAG,QAAQ,IAAI,cACjC,kBAAgB,QAAQ,aAAO,kBAAgB,QAAQ;AAAA,IACjD,UAAQ,QAAQ,aAAO,UAAQ,oBAE1B,EAAmB,MAC9B,EACA,EACA,IACG,CACH,KAAM,GAAS,EAAc,YAC7B,GAAI,IAAQ,QAAS,CAEnB,KAAM,GAAS,AADD,MAAM,GAAO,YACN,OACrB,GAAI,CAAC,EAAO,OACV,EAAO,YAAY,OACd,CACL,GAAI,GAAU,sCACd,EAAO,QACL,AAAC,GACE,GAAW;AAAA;AAAA,uBAAuD,EAAM;AAAA,wBAA2B,EAAM;AAAA;AAAA,uBAAgD,EAAM;AAAA,IAEpK,EAAO,YAAY,YAEZ,IAAQ,OACjB,GAAI,CAAC,EAAO,OACV,kBAAY,EAAQ,EAAa,EAAiB,EAAK,OAAW,CAChE,SAAU,SAEP,CACL,GAAI,GAAU,sCACd,EAAO,QACL,AAAC,GACE,GAAW;AAAA;AAAA,uBAAuD,EAAM;AAAA,wBAA2B,EAAM;AAAA;AAAA,uBAAgD,EAAM;AAAA,IAEpK,kBAAY,EAAQ,EAAS,EAAiB,EAAK,OAAW,CAC5D,SAAU",
  "names": []
}

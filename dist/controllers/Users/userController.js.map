{
  "version": 3,
  "sources": ["../../../src/controllers/Users/userController.ts"],
  "sourcesContent": ["import * as WAWebJS from \"whatsapp-web.js\";\nimport { help } from \"../../actions/help\";\nimport { sendCalendar } from \"../../actions/sendCalendar\";\nimport { sendClassMessage } from \"../../actions/sendClassMessage\";\nimport { sendEligibility, sendImpDates } from \"../../actions/courseInfo\";\nimport { random } from \"../../actions/sendMessage\";\nimport { sendNotes, sendNotesByFilter } from \"../../actions/sendNotes\";\nimport { sendSource } from \"../../actions/sendSource\";\nimport {\n  CALENDAR_COMMANDS,\n  CALENDAR_TYPOS,\n  CLASS_COMMAND,\n  ELIGIBILITY,\n  HELP_CMDS,\n  IMP_DATES,\n  NOTES_CMD,\n  PLAYLIST_CMD_ALIAS,\n  SOURCE,\n} from \"../../utils/Commands/instructions\";\nimport { sendPlayList, sendPlayListByFilter } from \"../../actions/sendPlaylist\";\nimport { MessageType } from \"../../types/types\";\nimport { BOT_CHECK_MESSAGES } from \"../../utils/Commands/instructions\";\nimport { PING_REPLIES } from \"../../utils/reply/replies\";\nimport { BOT } from \"../..\";\nimport { increaseNumberOfCmd } from \"../../services/mongo\";\nexport const userControl = async (\n  client: WAWebJS.Client,\n  messageInstance: WAWebJS.Message,\n  userObj: MessageType\n) => {\n  let messageBody: string;\n  if (messageInstance.body.at(1) === ' ') {\n    messageBody = messageInstance.body.slice(2);\n  } else {\n    messageBody = messageInstance.body.slice(1);\n  }\n  console.log(\"reached User Controller\")\n  // Ping Message Reply\n  if (BOT_CHECK_MESSAGES.includes(messageBody.toLocaleLowerCase())) {\n    const chats = await client.getChats();\n    const WA_BOT = chats[BOT];\n    await WA_BOT.sendMessage(\n      `${process.env.BOT_NAME}: ${\n        PING_REPLIES.members[random(PING_REPLIES.memberMsgNumber)]\n      }`\n    );\n    // Commands Message Reply\n    // } else\n    // if (COMMANDS.includes(messageBody.toLocaleLowerCase())) {\n    //   sendMessage(client, USER_COMMANDS, messageInstance, who, true);\n    //   return;\n    // Notes Replies\n    increaseNumberOfCmd({ recipitantId: userObj.chatId });\n  } else if (\n    NOTES_CMD.includes(messageBody.split(\" \")[0].toLocaleLowerCase())\n  ) {\n    if (messageBody.split(\" \").length > 1) {\n      sendNotesByFilter(client, messageBody, messageInstance, userObj);\n    } else {\n      sendNotes(client, messageInstance, userObj);\n    }\n    increaseNumberOfCmd({ recipitantId: userObj.chatId });\n    // Calender Replies WITH Typos\n  } else if (\n    CALENDAR_COMMANDS.includes(messageBody.toLocaleLowerCase()) ||\n    CALENDAR_TYPOS.includes(messageBody.toLocaleLowerCase())\n  ) {\n    sendCalendar(client, messageInstance, userObj);\n    // Class Commands Replies\n    increaseNumberOfCmd({ recipitantId: userObj.chatId });\n  } else if (CLASS_COMMAND.includes(messageBody.toLocaleLowerCase())) {\n    sendClassMessage(client, messageInstance, userObj);\n    increaseNumberOfCmd({ recipitantId: userObj.chatId });\n  }\n\n  // Help Commands Replies\n  else if (HELP_CMDS.includes(messageBody.toLocaleLowerCase())) {\n    help(client, messageInstance, userObj);\n    increaseNumberOfCmd({ recipitantId: userObj.chatId });\n  }\n\n  // Source Command Reply\n  else if (SOURCE.includes(messageBody.toLocaleLowerCase())) {\n    sendSource(client,messageInstance, userObj);\n    increaseNumberOfCmd({ recipitantId: userObj.chatId });\n  }\n\n  // For sending Important Dates\n  else if (IMP_DATES.includes(messageBody.toLocaleLowerCase())) {\n    sendImpDates(client, messageInstance, userObj);\n    increaseNumberOfCmd({ recipitantId: userObj.chatId });\n  }\n\n  // For sending Eligibility\n  else if (ELIGIBILITY.includes(messageBody.toLocaleLowerCase())) {\n    sendEligibility(client, messageInstance, userObj);\n    increaseNumberOfCmd({ recipitantId: userObj.chatId });\n  }\n\n  // For sending Playlists\n  else if (\n    PLAYLIST_CMD_ALIAS.includes(messageBody.split(\" \")[0].toLocaleLowerCase())\n  ) {\n    if (messageBody.split(\" \").length > 1) {\n      sendPlayListByFilter(client, messageBody, messageInstance, userObj);\n    } else {\n      sendPlayList(client, messageInstance, userObj);\n    }\n    increaseNumberOfCmd({ recipitantId: userObj.chatId });\n  }\n};\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,iBAAAE,IAAA,eAAAC,EAAAH,GACA,IAAAI,EAAqB,8BACrBC,EAA6B,sCAC7BC,EAAiC,0CACjCC,EAA8C,oCAC9CC,EAAuB,qCACvBC,EAA6C,mCAC7CC,EAA2B,oCAC3BC,EAUO,6CACPC,EAAmD,sCAEnDD,EAAmC,6CACnCE,EAA6B,qCAC7BC,EAAoB,iBACpBC,EAAoC,gCAC7B,MAAMb,EAAc,MACzBc,EACAC,EACAC,IACG,CACH,IAAIC,EACAF,EAAgB,KAAK,GAAG,CAAC,IAAM,IACjCE,EAAcF,EAAgB,KAAK,MAAM,CAAC,EAE1CE,EAAcF,EAAgB,KAAK,MAAM,CAAC,EAE5C,QAAQ,IAAI,yBAAyB,EAEjC,qBAAmB,SAASE,EAAY,kBAAkB,CAAC,GAG7D,MAFc,MAAMH,EAAO,SAAS,GACf,KAAG,EACX,YACX,GAAG,QAAQ,IAAI,aACb,eAAa,WAAQ,UAAO,eAAa,eAAe,CAAC,GAE7D,KAOA,uBAAoB,CAAE,aAAcE,EAAQ,MAAO,CAAC,GAEpD,YAAU,SAASC,EAAY,MAAM,GAAG,EAAE,CAAC,EAAE,kBAAkB,CAAC,GAE5DA,EAAY,MAAM,GAAG,EAAE,OAAS,KAClC,qBAAkBH,EAAQG,EAAaF,EAAiBC,CAAO,KAE/D,aAAUF,EAAQC,EAAiBC,CAAO,KAE5C,uBAAoB,CAAE,aAAcA,EAAQ,MAAO,CAAC,GAGpD,oBAAkB,SAASC,EAAY,kBAAkB,CAAC,GAC1D,iBAAe,SAASA,EAAY,kBAAkB,CAAC,MAEvD,gBAAaH,EAAQC,EAAiBC,CAAO,KAE7C,uBAAoB,CAAE,aAAcA,EAAQ,MAAO,CAAC,GAC3C,gBAAc,SAASC,EAAY,kBAAkB,CAAC,MAC/D,oBAAiBH,EAAQC,EAAiBC,CAAO,KACjD,uBAAoB,CAAE,aAAcA,EAAQ,MAAO,CAAC,GAI7C,YAAU,SAASC,EAAY,kBAAkB,CAAC,MACzD,QAAKH,EAAQC,EAAiBC,CAAO,KACrC,uBAAoB,CAAE,aAAcA,EAAQ,MAAO,CAAC,GAI7C,SAAO,SAASC,EAAY,kBAAkB,CAAC,MACtD,cAAWH,EAAOC,EAAiBC,CAAO,KAC1C,uBAAoB,CAAE,aAAcA,EAAQ,MAAO,CAAC,GAI7C,YAAU,SAASC,EAAY,kBAAkB,CAAC,MACzD,gBAAaH,EAAQC,EAAiBC,CAAO,KAC7C,uBAAoB,CAAE,aAAcA,EAAQ,MAAO,CAAC,GAI7C,cAAY,SAASC,EAAY,kBAAkB,CAAC,MAC3D,mBAAgBH,EAAQC,EAAiBC,CAAO,KAChD,uBAAoB,CAAE,aAAcA,EAAQ,MAAO,CAAC,GAKpD,qBAAmB,SAASC,EAAY,MAAM,GAAG,EAAE,CAAC,EAAE,kBAAkB,CAAC,IAErEA,EAAY,MAAM,GAAG,EAAE,OAAS,KAClC,wBAAqBH,EAAQG,EAAaF,EAAiBC,CAAO,KAElE,gBAAaF,EAAQC,EAAiBC,CAAO,KAE/C,uBAAoB,CAAE,aAAcA,EAAQ,MAAO,CAAC,EAExD",
  "names": ["userController_exports", "__export", "userControl", "__toCommonJS", "import_help", "import_sendCalendar", "import_sendClassMessage", "import_courseInfo", "import_sendMessage", "import_sendNotes", "import_sendSource", "import_instructions", "import_sendPlaylist", "import_replies", "import__", "import_mongo", "client", "messageInstance", "userObj", "messageBody"]
}

{
  "version": 3,
  "sources": ["../../../src/controllers/Admin/adminController.ts"],
  "sourcesContent": ["import * as WAWebJS from 'whatsapp-web.js';\nimport { random } from '../../actions/sendMessage';\nimport { BOT_CHECK_MESSAGES } from '../../utils/Commands/instructions';\nimport { PING_REPLIES } from '../../utils/reply/replies';\nimport {\n  CALENDAR_COMMANDS,\n  CALENDAR_TYPOS,\n  CLASS_COMMAND,\n  // COMMANDS,\n  ELIGIBILITY,\n  HELP_CMDS,\n  IMP_DATES,\n  NOTES_CMD,\n  PLAYLIST_CMD_ALIAS,\n  SOURCE,\n} from '../../utils/Commands/instructions';\nimport { BOT } from '../..';\nimport { sendNotes, sendNotesByFilter } from '../../actions/sendNotes';\nimport { sendCalendar } from '../../actions/sendCalendar';\nimport { sendClassMessage } from '../../actions/sendClassMessage';\nimport { help } from '../../actions/help';\nimport { sendSource } from '../../actions/sendSource';\nimport { sendEligibility, sendImpDates } from '../../actions/courseInfo';\nimport { sendPlayList, sendPlayListByFilter } from '../../actions/sendPlaylist';\nimport { MessageType } from '../../types/types';\n\nexport const adminControl = async (\n  client: WAWebJS.Client,\n  messageInstance: WAWebJS.Message,\n  who: MessageType\n) => {\n  let messageBody: string;\n  if (messageInstance.body.at(1) === ' ') {\n    messageBody = messageInstance.body.slice(2);\n  } else {\n    messageBody = messageInstance.body.slice(1);\n  }\n  // Ping Replies\n  if (BOT_CHECK_MESSAGES.includes(messageBody.toLocaleLowerCase())) {\n    const chats = await client.getChats();\n    const WA_BOT = chats[BOT];\n    await WA_BOT.sendMessage(\n      `${process.env.BOT_NAME}: ${\n        PING_REPLIES.admin[random(PING_REPLIES.admin.length)]\n      }`\n    );\n\n    // Notes Replies\n  } else if (\n    NOTES_CMD.includes(messageBody.split(' ')[0].toLocaleLowerCase())\n  ) {\n    if (messageBody.split(' ').length > 1) {\n      sendNotesByFilter(client, messageBody, messageInstance, who);\n    } else {\n      sendNotes(client, messageInstance, who);\n    }\n\n    // Calender Replies WITH Typos\n  } else if (\n    CALENDAR_COMMANDS.includes(messageBody.toLocaleLowerCase()) ||\n    CALENDAR_TYPOS.includes(messageBody.toLocaleLowerCase())\n  ) {\n    sendCalendar(client, messageInstance, who);\n\n    // Commands Replies\n    // } else if (COMMANDS.includes(messageBody.toLocaleLowerCase())) {\n    //   sendMessage(client, USER_COMMANDS, messageInstance, who, true);\n\n    // Class Commands Replies\n  } else if (CLASS_COMMAND.includes(messageBody.toLocaleLowerCase())) {\n    sendClassMessage(client, messageInstance, who);\n  }\n\n  // Help Commands Replies\n  else if (HELP_CMDS.includes(messageBody.toLocaleLowerCase())) {\n    help(client, messageInstance, who);\n  }\n\n  // Source Command Reply\n  else if (SOURCE.includes(messageBody.toLocaleLowerCase())) {\n    sendSource(client,messageInstance, who);\n  }\n\n  // For sending Important Dates\n  else if (IMP_DATES.includes(messageBody.toLocaleLowerCase())) {\n    sendImpDates(client, messageInstance, who);\n  }\n\n  // For sending Eligibility\n  else if (ELIGIBILITY.includes(messageBody.toLocaleLowerCase())) {\n    sendEligibility(client, messageInstance, who);\n  }\n\n  // For sending Playlists\n  else if (\n    PLAYLIST_CMD_ALIAS.includes(messageBody.split(' ')[0].toLocaleLowerCase())\n  ) {\n    if (messageBody.split(' ').length > 1) {\n      sendPlayListByFilter(client, messageBody, messageInstance, who);\n    } else {\n      sendPlayList(client, messageInstance, who);\n    }\n  }\n};\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,kBAAAE,IAAA,eAAAC,EAAAH,GACA,IAAAI,EAAuB,qCACvBC,EAAmC,6CACnCC,EAA6B,qCAC7BD,EAWO,6CACPE,EAAoB,iBACpBC,EAA6C,mCAC7CC,EAA6B,sCAC7BC,EAAiC,0CACjCC,EAAqB,8BACrBC,EAA2B,oCAC3BC,EAA8C,oCAC9CC,EAAmD,sCAG5C,MAAMZ,EAAe,MAC1Ba,EACAC,EACAC,IACG,CACH,IAAIC,EACAF,EAAgB,KAAK,GAAG,CAAC,IAAM,IACjCE,EAAcF,EAAgB,KAAK,MAAM,CAAC,EAE1CE,EAAcF,EAAgB,KAAK,MAAM,CAAC,EAGxC,qBAAmB,SAASE,EAAY,kBAAkB,CAAC,EAG7D,MAFc,MAAMH,EAAO,SAAS,GACf,KAAG,EACX,YACX,GAAG,QAAQ,IAAI,aACb,eAAa,SAAM,UAAO,eAAa,MAAM,MAAM,CAAC,GAExD,EAIA,YAAU,SAASG,EAAY,MAAM,GAAG,EAAE,CAAC,EAAE,kBAAkB,CAAC,EAE5DA,EAAY,MAAM,GAAG,EAAE,OAAS,KAClC,qBAAkBH,EAAQG,EAAaF,EAAiBC,CAAG,KAE3D,aAAUF,EAAQC,EAAiBC,CAAG,EAKxC,oBAAkB,SAASC,EAAY,kBAAkB,CAAC,GAC1D,iBAAe,SAASA,EAAY,kBAAkB,CAAC,KAEvD,gBAAaH,EAAQC,EAAiBC,CAAG,EAOhC,gBAAc,SAASC,EAAY,kBAAkB,CAAC,KAC/D,oBAAiBH,EAAQC,EAAiBC,CAAG,EAItC,YAAU,SAASC,EAAY,kBAAkB,CAAC,KACzD,QAAKH,EAAQC,EAAiBC,CAAG,EAI1B,SAAO,SAASC,EAAY,kBAAkB,CAAC,KACtD,cAAWH,EAAOC,EAAiBC,CAAG,EAI/B,YAAU,SAASC,EAAY,kBAAkB,CAAC,KACzD,gBAAaH,EAAQC,EAAiBC,CAAG,EAIlC,cAAY,SAASC,EAAY,kBAAkB,CAAC,KAC3D,mBAAgBH,EAAQC,EAAiBC,CAAG,EAK5C,qBAAmB,SAASC,EAAY,MAAM,GAAG,EAAE,CAAC,EAAE,kBAAkB,CAAC,IAErEA,EAAY,MAAM,GAAG,EAAE,OAAS,KAClC,wBAAqBH,EAAQG,EAAaF,EAAiBC,CAAG,KAE9D,gBAAaF,EAAQC,EAAiBC,CAAG,EAG/C",
  "names": ["adminController_exports", "__export", "adminControl", "__toCommonJS", "import_sendMessage", "import_instructions", "import_replies", "import__", "import_sendNotes", "import_sendCalendar", "import_sendClassMessage", "import_help", "import_sendSource", "import_courseInfo", "import_sendPlaylist", "client", "messageInstance", "who", "messageBody"]
}

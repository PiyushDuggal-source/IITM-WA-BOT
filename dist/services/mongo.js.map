{
  "version": 3,
  "sources": ["../../src/services/mongo.ts"],
  "sourcesContent": ["import { UserModel } from \"../models/models\";\nimport { log } from \"../utils/log\";\n\nexport const addUser = async ({ recipitantId }: { recipitantId: string }) => {\n  try {\n    await UserModel.create({\n      recipitantId,\n    });\n  } catch (error: any) {\n    log({ msg: `Creation Error${error}`, type: \"ERROR\", error: true });\n  }\n};\n\nexport const removeUser = async ({\n  recipitantId,\n}: {\n  recipitantId: string;\n}) => {\n  try {\n    await UserModel.deleteOne({ recipitantId }).exec();\n  } catch (error: any) {\n    log({ msg: `Deletion Error${error}`, type: \"ERROR\", error: true });\n  }\n};\n\nexport const increaseNumberOfCmd = async ({\n  recipitantId,\n}: {\n  recipitantId: string;\n}) => {\n  await UserModel.findOneAndUpdate(\n    { recipitantId },\n    {\n      $inc: { numberOfCmds: 1 },\n    }\n  );\n};\n\nexport const disciplinaryAction = async ({\n  recipitantId,\n}: {\n  recipitantId: string;\n}) => {\n  await UserModel.findOneAndUpdate(\n    { recipitantId },\n    {\n      $inc: {\n        banCount: 1,\n      },\n    }\n  );\n};\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,EAAA,uBAAAC,EAAA,wBAAAC,EAAA,eAAAC,IAAA,eAAAC,EAAAN,GAAA,IAAAO,EAA0B,4BAC1BC,EAAoB,wBAEb,MAAMN,EAAU,MAAO,CAAE,aAAAO,CAAa,IAAgC,CAC3E,GAAI,CACF,MAAM,YAAU,OAAO,CACrB,aAAAA,CACF,CAAC,CACH,OAASC,EAAP,IACA,OAAI,CAAE,IAAK,iBAAiBA,IAAS,KAAM,QAAS,MAAO,EAAK,CAAC,CACnE,CACF,EAEaL,EAAa,MAAO,CAC/B,aAAAI,CACF,IAEM,CACJ,GAAI,CACF,MAAM,YAAU,UAAU,CAAE,aAAAA,CAAa,CAAC,EAAE,KAAK,CACnD,OAASC,EAAP,IACA,OAAI,CAAE,IAAK,iBAAiBA,IAAS,KAAM,QAAS,MAAO,EAAK,CAAC,CACnE,CACF,EAEaN,EAAsB,MAAO,CACxC,aAAAK,CACF,IAEM,CACJ,MAAM,YAAU,iBACd,CAAE,aAAAA,CAAa,EACf,CACE,KAAM,CAAE,aAAc,CAAE,CAC1B,CACF,CACF,EAEaN,EAAqB,MAAO,CACvC,aAAAM,CACF,IAEM,CACJ,MAAM,YAAU,iBACd,CAAE,aAAAA,CAAa,EACf,CACE,KAAM,CACJ,SAAU,CACZ,CACF,CACF,CACF",
  "names": ["mongo_exports", "__export", "addUser", "disciplinaryAction", "increaseNumberOfCmd", "removeUser", "__toCommonJS", "import_models", "import_log", "recipitantId", "error"]
}
